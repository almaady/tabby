// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DropDownWrapper should render correctly with default state 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DropdownWrapper
    className=""
    icon="options"
    size="R"
  >
    <DropdownOption
      className=""
      icon=""
      iconDirection="left"
      onClick={[Function]}
      text="Option 1"
    />
    <DropdownOption
      className=""
      icon=""
      iconDirection="left"
      onClick={[Function]}
      text="Option 2"
    />
    <DropdownOption
      className=""
      icon=""
      iconDirection="left"
      onClick={[Function]}
      text="Option 3"
    />
  </DropdownWrapper>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          id="activator-dropdown"
        >
          <ButtonIcon
            borderColor=""
            className=""
            color="gray-l1"
            disabled={false}
            icon="options"
            onClick={[Function]}
            size="R"
            type="button"
          />
        </div>,
        false,
      ],
      "className": "dropdown__wrapper",
    },
    "ref": Object {
      "current": null,
    },
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ButtonIcon
            borderColor=""
            className=""
            color="gray-l1"
            disabled={false}
            icon="options"
            onClick={[Function]}
            size="R"
            type="button"
          />,
          "id": "activator-dropdown",
        },
        "ref": Object {
          "current": null,
        },
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "borderColor": "",
            "className": "",
            "color": "gray-l1",
            "disabled": false,
            "icon": "options",
            "onClick": [Function],
            "size": "R",
            "type": "button",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            id="activator-dropdown"
          >
            <ButtonIcon
              borderColor=""
              className=""
              color="gray-l1"
              disabled={false}
              icon="options"
              onClick={[Function]}
              size="R"
              type="button"
            />
          </div>,
          false,
        ],
        "className": "dropdown__wrapper",
      },
      "ref": Object {
        "current": null,
      },
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ButtonIcon
              borderColor=""
              className=""
              color="gray-l1"
              disabled={false}
              icon="options"
              onClick={[Function]}
              size="R"
              type="button"
            />,
            "id": "activator-dropdown",
          },
          "ref": Object {
            "current": null,
          },
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "borderColor": "",
              "className": "",
              "color": "gray-l1",
              "disabled": false,
              "icon": "options",
              "onClick": [Function],
              "size": "R",
              "type": "button",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
