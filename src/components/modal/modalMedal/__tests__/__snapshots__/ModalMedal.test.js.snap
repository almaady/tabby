// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Modal Medal should render correctly with default state 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ModalMedal
    btnColor="blue"
    btnText="button text"
    message="message"
    onClose={[Function]}
    show={false}
    title="Title"
  >
    <Medal
      medalSrc="medal"
    />
    <Medal
      medalSrc="medal"
    />
    <Medal
      medalSrc="medal"
    />
  </ModalMedal>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <div
          className="medals"
        >
          <Medal
            medalSrc="medal"
          />
          <Medal
            medalSrc="medal"
          />
          <Medal
            medalSrc="medal"
          />
        </div>,
        <div
          className="stars--container"
        >
          <div
            id="stars"
          />
          <div
            id="stars2"
          />
          <div
            id="stars3"
          />
        </div>,
        <ModalHeader
          title="Title"
        />,
        <p>
          message
        </p>,
        <ModalFooter>
          <ButtonText
            borderColor=""
            className=""
            color="blue"
            disabled={false}
            onClick={[Function]}
            text="button text"
            type="button"
          />
        </ModalFooter>,
      ],
      "className": "modal--medal",
      "classNameWrapper": "",
      "onClose": [Function],
      "show": false,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Medal
              medalSrc="medal"
            />,
            <Medal
              medalSrc="medal"
            />,
            <Medal
              medalSrc="medal"
            />,
          ],
          "className": "medals",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": ".0",
            "nodeType": "class",
            "props": Object {
              "medalSrc": "medal",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": ".1",
            "nodeType": "class",
            "props": Object {
              "medalSrc": "medal",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": ".2",
            "nodeType": "class",
            "props": Object {
              "medalSrc": "medal",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              id="stars"
            />,
            <div
              id="stars2"
            />,
            <div
              id="stars3"
            />,
          ],
          "className": "stars--container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "stars",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "stars2",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "stars3",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "title": "Title",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "message",
        },
        "ref": null,
        "rendered": "message",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <ButtonText
            borderColor=""
            className=""
            color="blue"
            disabled={false}
            onClick={[Function]}
            text="button text"
            type="button"
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "borderColor": "",
            "className": "",
            "color": "blue",
            "disabled": false,
            "onClick": [Function],
            "text": "button text",
            "type": "button",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div
            className="medals"
          >
            <Medal
              medalSrc="medal"
            />
            <Medal
              medalSrc="medal"
            />
            <Medal
              medalSrc="medal"
            />
          </div>,
          <div
            className="stars--container"
          >
            <div
              id="stars"
            />
            <div
              id="stars2"
            />
            <div
              id="stars3"
            />
          </div>,
          <ModalHeader
            title="Title"
          />,
          <p>
            message
          </p>,
          <ModalFooter>
            <ButtonText
              borderColor=""
              className=""
              color="blue"
              disabled={false}
              onClick={[Function]}
              text="button text"
              type="button"
            />
          </ModalFooter>,
        ],
        "className": "modal--medal",
        "classNameWrapper": "",
        "onClose": [Function],
        "show": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Medal
                medalSrc="medal"
              />,
              <Medal
                medalSrc="medal"
              />,
              <Medal
                medalSrc="medal"
              />,
            ],
            "className": "medals",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": ".0",
              "nodeType": "class",
              "props": Object {
                "medalSrc": "medal",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": ".1",
              "nodeType": "class",
              "props": Object {
                "medalSrc": "medal",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": ".2",
              "nodeType": "class",
              "props": Object {
                "medalSrc": "medal",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                id="stars"
              />,
              <div
                id="stars2"
              />,
              <div
                id="stars3"
              />,
            ],
            "className": "stars--container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "stars",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "stars2",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "stars3",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "title": "Title",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "message",
          },
          "ref": null,
          "rendered": "message",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <ButtonText
              borderColor=""
              className=""
              color="blue"
              disabled={false}
              onClick={[Function]}
              text="button text"
              type="button"
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "borderColor": "",
              "className": "",
              "color": "blue",
              "disabled": false,
              "onClick": [Function],
              "text": "button text",
              "type": "button",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
